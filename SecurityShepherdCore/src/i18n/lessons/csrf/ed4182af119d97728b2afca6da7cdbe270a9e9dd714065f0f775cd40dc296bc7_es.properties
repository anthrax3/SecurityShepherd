title.question.csrf = ¿En qu&eacute; consiste la falsificaci&oacute;n de peticiones en sitios cruzados(CSRF)?

paragraph.info1 = Un ataque de falsificaci&oacute;n de peticiones en sitios cruzados, o <a>CSRF</a>, Fuerza al navegador web de un usuario a enviar una <a>petici&oacute;n HTTP forzada</a> con la cookie del usuario a una aplicaci&oacute;n, haciendo que el usuario interactue, sin saberlo, con la aplicaci&oacute;n en la que ha iniciado sesi&oacute;n. Los ataques CSRF son posibles cuando la aplicaci&oacute;n no se asegura de que el usuario est&aacute; realmente interactuando con ella. La severidad de un ataque CSRF depende de la funcionalidad de la aplicaci&oacute;n ceon la que la v&iacute;ctima es forzada a interactuar. Si el ataque est&aacute; dirigido a un administrado, la severidad ser&aacute; mucho mayor que si se dirige a un usuario invitado. 
paragraph.info2 = To prevent CSRF attacks, every request must contain a <a>nonce</a> token (an unpredictable number) to be included with every request. To find CSRF vulnerabilities in applications, this is the token that is tested. If a request does not contain a nonce at all, then it is likely vulnerable to CSRF attacks. If a request does contain a nonce, then there are more steps to include in testing for CSRF. Even though the nonce is in the request it may not be validated or may work with a null value. It is possible that the application's nonce management will allow an attacker to use their valid nonce in other user requests!
paragraph.info3 = Se puede usar JavaScript para enviar peticiones HTTP. Este tipo de peticiones incluyen la cabecera HTTP "X-Requested-With". Si esto es comprobado en las peticiones entrantes, puede servir como protecci&oacute;n contra CSRF sin utilizar un valor nonce o &uacute;nico. Esta cabecera no se puede repolicar desde un dominio remoto, debido a la <a>Pol&iacute;tica del mismo origen</a> o <a>Same Origin Policy</a>, previniendo as&iacute; que un atacante lleve a cabo un ataque de forma remota. No es recomendable usar s&oacute;lo esto como &uacute;nico modelo de protecci&oacute;n, ya que es com&uacute;n encontrar problemas en los navegadores que permiten a los atacantes enviar peticiones a trav&eacute;s de otros dominios desde un navegador.
paragraph.info4 = Se pueden llevar a cabo ataques CSRF en peticiones HTTP <a>GET</a> y <a>POST</a>. Para forzar a una v&iacute;ctima a enviar una petici&oacute;n GET sin problemas, la petici&oacute;n (subrayada) se puede embeber en un image tag de una p&aacute;gina web como en el siguiente ejemplo;<br /> &lt;img src=&quot;<a>http://www.secureBank.ie/sendMoney?giveMoneyTo=hacker&amp;giveAmount=1000</a>&quot;/&gt;
paragraph.info5 = Para forzar a una v&iacute;ctima a enviar una petici&oacute;n POST, se requiere un poco m&aacute;s de esfuerzo. La forma m&aacute;s sencilla es crear un formulario que se envia autom&aacute;ticamente usando JavaScript, como en el siguiente ejemplo;<br/> &lt;form name=&quot;csrfForm&quot; action=&quot;<a>http://www.secureBank.ie/sendMoney</a>&quot; method=&quot;<a>POST</a>&quot;&gt;<br /> &lt;input type=&quot;hidden&quot; name=&quot;<a>giveMoneyTo</a>&quot; value=&quot;hacker&quot; /&gt;<br /> &lt;input type=&quot;hidden&quot; name=&quot;<a>giveAmount</a>&quot; value=&quot;1000&quot; /&gt;<br /> &lt;input type=&quot;submit&quot;/&gt;<br /> &lt;/form&gt;<br /> &lt;script&gt;<br /> document.csrfForm.submit();<br /> &lt;/script&gt;
paragraph.info6 = La funci&oacute;n utilizada por un administrador para marcar esta lecci&oacute;n como completa para un usuario se inicia cuando se env&iacute;a la siguiente petici&oacute;n GET a este servidor, donde 'exampleId' es un userId v&aacute;lido; 
paragraph.info7 = Para completar esta lecci&oacute;n, env&iacute;a un mensaje al administrador con una URL de imagen, la cual se mostrar&aacute; en una <a>&lt;img&gt;</a> tag embebida que les forzar&aacute; a enviar la petici&oacute;n descrita arriba, reemplazando el atributo exampleId con tu userId temporal.

challenge.title = Contactar Admin
challenge.description = Por favor, introduce la <a>URL de la imagen</a> que quieres enviar a un administrador de Security Shepherd disponible las 24h
				
button.hideIntro = Ocultar intro CSRF 
button.showIntro = Mostrar intro CSRF 
button.sendMessage = Enviar mensaje

generic.loading = Cargando
generic.error = Se ha producido un error